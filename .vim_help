VIM general tips
nmap <leader>] <Esc>:write<CR>:!%:p<CR>
set ts=4 sw=4 sts=4
!!!!  - . точка повторить предыдую команду
set mouse=a - включить мышь

В NORMAL MODE
SHIFT+V - выбрать блок visual line
CONTROL+V - выбрать блок в visual block
<< >> подвинуть выбранный блок на один shiftwidth
5> 5< подвинуть выбранный блок на 5 shiftwidth
CTRL+V, 5j, SHIFT+i, #, ESC - закомментировать 5 строк
CTRL+V, 5j, SHIFT+i, x, ESC - удалить первый символ у 5 строк
di> или yi} или di) удалить/скопировать строки внутри блока <> {} ()
H', 'M' и "L" перемещают курсор на верхнюю, среднюю и нижнюю линии экрана соответственно.
'zt', 'zz', 'zb' не перемещают курсор, но скролят текст так, чтобы курсор оказался вверху, в середине, либо в низу экрана.
'*' ищет следующее появление слова, на котором находится курсор вперед по тексту,
'#' делает тоже самое назад
% - переместить курсор на открывающую или закрывающую скобку ()[]{}
:read file считать из файла
c<move> = ce,c3w - заменить n слов и перейти в режим редактирования
C - заменить до конца строки
s - удалить символ под курсором, перейти to insert
S - удалить строку под курсором, перейти to insert
A - move to eol, switch to insert mode
I - move to start of line, switch to insert mode
{,} - переместить курсор к концу/началу параграфа
(,) - переместить курсор к концу/началу предложения

В INSERT MODE
ctrl+o, move - выполнить одну команду и перейти назад в insert mode

1.Показывать спецсимволы
:set list - показывать спецсимволы
:set nolist - не показывать спецсимволы
:set list! - инверсировать показ

nmap <leader>l :set list!<CR> переключать отображение по \l

set listchars=tab:>\ ,eol:¬ 

можно изменить цвет у спецсимволов
highlight NonText guifg=#4a4a59
highlight SpecialKey guifg=#4a4a59

:help 'list'
:help listchars
:help hl-NonText
:help hl-SpecialKey
:help i_CTRL-V_digit - inserting special characters

2. Табуляция
:set ts=4 - количество символов(ширина) <TAB>
:set sts=4 - softtabstop количество пробелов, за которые считается <TAB> при вставке (работает при noexpandtab если хотим вставлять меньше чем sts)
:set sw=4 - количество пробелов при вставке или удалении в нормальном режиме
:set expandtab - заменять символ табуляции пробелами

Если пользуетесь <TAB>:
:set noexpandtab
:set ts=4 sts=0 sw=4

Если пользуетесь пробелами
:set expandtab
:set ts=4 sts=4 sw=4

:help tabstop
:help softtabstop
:help shiftwidth
:help expandtab

4. Замена пробелов табуляцией
:retab! - Замена пробелов табуляцией
Vjjjj:retab!  - выделить визуальный блок в 4 строки и применить к нему retab

:%s/\s\+$//e - удалить все пробелы в конце строк во всем файле:
 :%s - режим замены
 \s - символ пробела
 \+ - один или больше
 $ - конец строки
 //e заменить на пусто, игнорировать ошибки


:g/^$/d - удалить пустые строки
 :g - выполнить команду для подходящих строк
  ^$ - начало конец строки
  /d - удалить строку
  
5.  Отступы
<<,>> - отступ ts на текущей строке
5>> отступ ts на 5 строках
shift+v, выбор количества строк, <,> - отступ на выделенном блоке "." повторить еще раз предыдущую команду

== - автоотступ строки по вышестоящей строке
5== - автоотступ на 5 строчек
== в visual автоотступ на блок

=<motion> 
=G - расставить автоотступы до конца файла

vi} - выбрать текст визуальный режим внутри {} ()  и т.д.
=i} - автоотступ внутри блока

6. Работа с буферами

Когда мы открываем файл, он поменяется в буфер
Можно считать несколько файлов vim 1.txt 2.txt

:ls     Вывести список файлов в буфере
:bn     открыть следующий буфер в этом окне
:bp     открыть предыдущий буфер в этом окне
CTRL-^  перепрыгруть в альтернативный файл

Если в буфер были внесены изменения, то он считается hidden
:w      записать в файл
:e!     восстановить оригинальный файл
:bd!    удалить буфер, отбросив все изменения
:q!     выйти не сохраняя все буферы
:b <TAB> переключиться на буфер с определенным именем

7. Работа с окнами

Можно просматривать несколько буферов одновременно, разделяя их на окна
Разделить экран на окна:
ctrl-w s  Разделить текущее окно горизонтально, открываяя в новом окне текущий файл
ctrl-w v  Разделить текущее окно вертикально, открываяя в новом окне текущий файл
:sp[lit] filename Разделить текущее окно горизонтально, открывая filename  в новом окне
:vsp[lit] filename Разделить текущее окно вертикально, открывая filename  в новом окне

:q[uit] закрыть текущее окно
:on[ly] - оставить открытым только текущее окно

Изменить фокус текущего окна
ctrl-w w Перевести фокус на следующее окно
ctrl-w h[j,k,l] Перевести фокус налево[вниз, вверх, вправо]

Изменить размер окна
ctrl-w + Увеличить высоту  текущего окна на 1 строку
ctrl-w - Уменьшить высоту  текущего окна на 1 строку
ctrl-w < Увеличить ширину  текущего окна на 1 столбец
ctrl-w > Уменьшить ширину  текущего окна на 1 столбец
ctrl-w _ Максимизировать ширину текущего окна
ctrl-w | Максимизировать высоту текущего окна

Перемещение окон
ctrl-w r Прокрутить все окна
ctrl-w x поменять местами текущее окно и соседское
ctrl-w H[J,K,L] поместить текущее окно на самое левое[правое, нижнее, верхнее, левое] место
Ctrl-w K — вертикальные окна, сделает горизонтальными.
Ctrl-w H — горизонтальные окна, сделает вертикальными. 

8. Работа с табами

Открытие и закрытие табов
:tabe[dit] filename открыть файл в новом табе
ctrl-w T переместить разбитые окна в табы
:q закрыть окно, закроет таб если в табе одно окно
:tabc[lose] закрыть текущий таб и все его окна
:tabo[nly] закрыть все табы, кроме текущего

Переключение между табами
gt перейти на следующий таб
gT перейти на предыдущий таб
#gt перейти на таб номер #

Перемещение табов
:tabmove переместить текущий таб в конец
:tabmove 0 переместить текущий таб в начало
:tabmove 1 переместить текущий таб на место второго таба

9. Работа с табами
По умолчанию вим не открывает файлы в новом табе. Он открывает файл в новом буфере, и делает буфер активным в текущем табе.
Буферы отображают список открытых файлов.
У каждого таба есть свой рабочий каталог
:pwd посмотреть текущий каталог для активного таба
:vimgrep pattern ** поиск по всем файлам в текущем каталоге, при этом в активном табе будет отображен первый файл с вхождением(и добавит файл в буфер если его там нет)
:cd изменить текущий рабочий каталог для активного таба

11. Работа с Changelist
vim ведет список всех позиций курсора, где производились изменения
Можно по этому листу перемещать курсор
g; - переместить курсор на предыдущую позицию редактирования
g, - переместить курсор на следующую позицию редактирования
:changes - список всех позиций где производились изменения

vim также ведет список всех прыжков по файлу, включая перемещение при поиске, H M L, {}, ()
ctrl-o  -  переместиться на предыдуее место прыжка
ctrl-i  -  переместиться в следующее место прыжка
:jumps - вывести список перемещений по экрану.



12. Сворачивание блоков кода
То, как vim будет сворачивать блоки кода, определяется методом folding'a, :help fold-methods
zi отключить folding
za развернуть текущий fold
zc свернуть текущий fold
zf<move> - создать ручной блок fold, размером <move>


13. netrw
:e. -   открыть explorer во все окно

i   -   поменять тип отображения в Explorer
-       перейти на уровень выше
<cr> -  перейти на уровень ниже

%   -   создать новый файл в текущей папке
d   -   создать директорию в текущей папке при открытом Explorer, ESC  для отмены
D   -   удалить директорию в текущей папке при открытом Explorer
R   -   переименьвать файл/папку
