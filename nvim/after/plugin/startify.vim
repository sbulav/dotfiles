let g:startify_lists = [
	\ { 'type': 'files',     'header': ['   MRU']            },
	\ { 'type': 'dir',       'header': ['   MRU '. getcwd()] },
	\ { 'type': 'bookmarks', 'header': ['   Bookmarks']      },
	\ { 'type': 'commands',  'header': ['   Commands']       },
	\ { 'type': 'sessions',  'header': ['   Sessions']       },
\ ]

let g:startify_bookmarks = [ {'c': '~/.config/nvim/init.vim'} ]

let g:startify_skiplist = [
	\ 'COMMIT_EDITMSG',
\ ]

let g:startify_commands = [
                \ {'u': ['Update Plugins', ':PlugUpdate']},
                \ ]

" let g:startify_session_dir = '~/.config/nvim/session'
let g:startify_session_autoload = 'no'
let g:startify_change_to_dir = 1
let g:startify_change_to_vcs_root = 0

let g:startify_enable_unsafe = 0
let g:startify_files_number = 10
let g:startify_session_persistence = 0

nnoremap <leader>so :SLoad<Space>
nnoremap <leader>ss :SSave<Space>
nnoremap <leader>sd :SDelete<CR>
nnoremap <leader>sc :SClose<CR>

let g:startify_custom_header = 'map(startify#fortune#boxed() , "repeat(\" \", 5).v:val")'

" tips from https://raw.githubusercontent.com/openuado/vimtips-fortune/master/fortunes/vimtips
" might need some formatting
let g:startify_custom_header_quotes = [
      \ ['VIP TIP:', 'Simplicity is a great virtue but it requires hard work to achieve it', 'and education to appreciate it. And to make matters worse: complexity sells better.', '', 'â€• Edsger W. Dijkstra'],
      \ ['VIP TIP:', 'zz to center the cursor vertically on your screen. useful when you 250gzz, for instance.' ],
      \ ['VIP TIP:', 'git config --global core.editor "gvim --nofork"' ],
      \ ['VIP TIP:', 'ci" inside a " " will erase everything between "" and place you in insertion mode.' ],
      \ ['VIP TIP:', ':set guifont=* in gvim or MacVim to get a font selection dialog. Useful while giving presentations.' ],
      \ ['VIP TIP:', ':h slash<CTRL-d> to get a list of all help topics containing the word "slash".' ],
      \ ['VIP TIP:', 'guu converts entire line to lowercase. gUU converts entire line to uppercase. ~ inverts case of current character.' ],
      \ ['VIP TIP:', '<CTRL-o> : trace your movements backwards in a file. <CTRL-i> trace your movements forwards in a file.' ],
      \ ['VIP TIP:', ':ju(mps) : list your movements {{help|jump-motions}}' ],
      \ ['VIP TIP:', ':history lists the history of your recent commands, sans duplicates.' ],
      \ ['VIP TIP:', '"+y to copy to the X11 (or Windows) clipboard. "+p to paste from it.' ],
      \ ['VIP TIP:', 'noremap " ` and noremap ` " to make marks easier to navigate. Now ` is easier to reach!' ],
      \ ['VIP TIP:', '2f/ would find the second occurrence of '/' in a line.' ],
      \ ['VIP TIP:', ':tab sball will re-tab all files in the buffers list.' ],
      \ ['VIP TIP:', ':%s/joe|fred/jerks/g will replace both "fred" and "joe" with "jerks".' ],
      \ ['VIP TIP:', '* # g* g# each searches for the word under the cursor (forwards/backwards)' ],
      \ ['VIP TIP:', ':vimgrep pattern **/*.txt will search all *.txt files in the current directory and its subdirectories for the pattern.' ],
      \ ['VIP TIP:', '== will auto-indent the current line.  Select text in visual mode, then = to auto-indent the selected lines.' ],
      \ ['VIP TIP:', 'Count the number of occurences of a word in a file with :%s/<word>//gn' ],
      \ ['VIP TIP:', ':set foldmethod=syntax to make editing long files of code much easier.  zo to open a fold.  zc to close it.  See more http://is.gd/9clX' ],
      \ ['VIP TIP:', 'Need to edit and run a previous command?  q: then find the command, edit it, and Enter to execute the line.' ],
      \ ['VIP TIP:', '@: to repeat the last executed command.' ],
      \ ['VIP TIP:', ':e $MYVIMRC to directly edit your vimrc.  :source $MYVIMRC to reload.  Mappings may make it even easier.' ],
      \ ['VIP TIP:', 'g<CTRL-G> to see technical information about the file, such as how many words are in it, or how many bytes it is.' ],
      \ ['VIP TIP:', 'gq{movement} to wrap text, or just gq while in visual mode. gqap will format the current paragraph.' ],
      \ ['VIP TIP:', ':E to see a simple file explorer.  (:Ex will too, if thats easier to remember.)' ],
      \ ['VIP TIP:', ':vimgrep pattern *.txt will search all .txt files in the current directory for the pattern.' ],
      \ ['VIP TIP:', ':match ErrorMsg "\%>80v.\+" uses matching to highlight lines longer than 80 columns.' ],
      \ ['VIP TIP:', ':%s/\r//g to remove all those nasty ^M from a file, or :%s/\r$//g for only at the end of a line.' ],
      \ ['VIP TIP:', '<CTRL-n><CTRL-p> offers word-completion while in insert mode.' ],
      \ ['VIP TIP:', '<CTRL-x><CTRL-l> offers line completion in insert mode.' ],
      \ ['VIP TIP:', '/<CTRL-r><CTRL-w> will pull the word under the cursor into search.' ],
      \ ['VIP TIP:', 'gf will open the file under the cursor.  (Killer feature.)' ],
      \ ['VIP TIP:', 'Ctrl-a, Ctrl-x will increment and decrement, respectively, the number under the cursor. May be precede by a count.' ],
      \ ['VIP TIP:', ':scriptnames will list all plugins and _vimrcs loaded.' ],
      \ ['VIP TIP:', ':tabdo [some command] will execute the command in all tabs.  Also see windo, bufdo, argdo.' ],
      \ ['VIP TIP:', ':vsplit filename will split the window vertically and open the file in the left-hand pane.  Great when writing unit tests!' ],
      \ ['VIP TIP:', 'qa starts a recording in register "a". q stops it. @a repeats the recording. 5@a repeats it 5 times.' ],
      \ ['VIP TIP:', ':%s/\v(.*\n){5}/&\r will insert a blank line every 5 lines' ],
      \ ['VIP TIP:', 'Ctrl-c to quickly get out of command-line mode.  (Faster than hitting ESC a couple times.)' ],
      \ ['VIP TIP:', 'Use "\v" in your regex to set the mode to "very magic", and avoid confusion. (:h \v for more info.)' ],
      \ ['VIP TIP:', '; is a motion to repeat last find with f. f" would find next quote. c; would change up to the next "' ],
      \ ['VIP TIP:', '/\%>80v.\+ with search highlighting (:set hlsearch) will highlight any text after column 80.' ],
      \ ['VIP TIP:', 'ga will display the ASCII, hex, and octal value of the character under the cursor.' ],
      \ ['VIP TIP:', ':%s/[.!?]\_s\+\a/\U&\E/g will uppercase the first letter of each sentence (except the very first one).' ],
      \ ['VIP TIP:', ':r !date will insert the current date/time stamp (from the "date" command -- a bit OS-specific).' ],
      \ ['VIP TIP:', ':lcd %:p:h will change to the directory of the current file.' ],
      \ ['VIP TIP:', ':g/search_term/# display each line containing "search_term" with line numbers.' ],
      \ ['VIP TIP:', ':%s/<!--\_.\{-}-->// will delete HTML comments, potentially spanning multiple lines.' ],
      \ ['VIP TIP:', "'. jumps to the last modified line. `. jumps to the exact position of last modification" ],
      \ ['VIP TIP:', '[I (thats bracket open, capital i) show lines containing the word under the cursor.' ],
      \ ['VIP TIP:', ':%s/\\/\//g replaces all backslashes with forward slashes' ],
      \ ['VIP TIP:', ':vimgrep /stext/ **/*.txt | :copen searches for stext recursively in *.txt files and show results in separate window' ],
      \ ['VIP TIP:', "ysiw' to surround current word with ',cs' {changes word to {word}} using the surround plugin: http://t.co/7QnLiwP3" ],
      \ ['VIP TIP:', 'use \v in your regex to set the mode to "very magic" and avoid confusion (:h \v for more info) http://t.co/KWtRFNPI' ],
      \ ['VIP TIP:', 'in gvim, change the cursor depending on what mode you are (normal, insert, etc...) http://is.gd/9dq0' ],
      \ ['VIP TIP:', 'In visual mode, use " to surround the selected text with " using the surround plugin http://is.gd/fpwJQ' ],
      \ ['VIP TIP:', ':tabo closes all tabs execpt the current one.' ],
      \ ['VIP TIP:', '<C-U> / <C-D> move the cursor up/down half a page (also handy :set nosol)' ],
      \ ['VIP TIP:', ':set titlestring=%f set the file name as the terminal title.' ],
      \ ['VIP TIP:', 'p / P paste after/before the cursor. Handy when inserting lines.' ],
      \ ['VIP TIP:', 'daw/caw deletes/changes the word under the cursor.' ],
      \ ['VIP TIP:', ':sh or :shell to open a console (then exit to come back to vim).' ],
      \ ['VIP TIP:', '= : re-indent (e.g. == to re-indent the current line).' ],
      \ ['VIP TIP:', ':%y c copies the entire buffer into register c. "cp inserts the content of register c in the current document.' ],
      \ ['VIP TIP:', 'ctrl-v blockwise visual mode (rectangular selection).' ],
      \ ['VIP TIP:', 'I/A switch to insert mode before/after the current line.' ],
      \ ['VIP TIP:', 'o/O insert a new line after/before the current line and switch to insert mode.' ],
      \ ['VIP TIP:', 'I/A in visual blockwise mode (ctrl-v) insert some text at the star/end of each line of the block text.' ],
      \ ['VIP TIP:', 'Need to edit a file in hex ? :help hex-editing gives you the manual.' ],
      \ ['VIP TIP:', 'Ctrl + o : Execute a command while in insert mode, then go back to insert mode. e.g. ctrl+o, p; paste without exiting insert mode' ],
      \ ['VIP TIP:', 'ctrl-r x (insert mode): insert the contents of buffer x. For example: "ctrl-r +" would insert the contents of the clipboard.' ],
      \ ['VIP TIP:', 'ctrl-r ctrl-w: Pull the word under the cursor in a : command. eg. :s/ctrl-r ctrl-w/foo/g' ],
      \ ['VIP TIP:', ':%y c: yank entire file into register c. "cp: Paste contents of c into document.' ],
      \ ['VIP TIP:', 'a/A : append at the cursor position / at the end of the line (enters insert mode)' ],
      \ ['VIP TIP:', 'ctrl-x ctrl-f (insert mode): complete with the file names in the current directory (ctrl-p/n to navigate through the candidates)' ],
      \ ['VIP TIP:', 'set mouse=a - enable mouse in terminal (selection, scroll, window resizing, ...).' ],
      \ ['VIP TIP:', 'J: join two lines' ],
      \ ['VIP TIP:', 'gg/G: go to start/end of file.' ],
      \ ['VIP TIP:', 'Ctrl-y (insert mode): insert character which is on the line above cursor. example: handy to initialize a structure.' ],
      \ ['VIP TIP:', ':set nowrap - disable line wrapping' ],
      \ ['VIP TIP:', 'vim -p <files> - load all files listed in separate tabs. e.g. vim -p *.c' ],
      \ ['VIP TIP:', '<CTRT-W>v == :vsplit like <CTRL-w>s == :split' ],
      \ ['VIP TIP:', 'If gvim is started from a terminal it opens at the same width as the terminal. To prevent this, add "set columns=80" to ~/.vimrc' ],
      \ ['VIP TIP:', 'Prefixing G or gg (command mode) with a number will cause vim to jump to that line number.' ],
      \ ['VIP TIP:', 'set showbreak - set characters to prefix wrapped lines with. e.g. ":set showbreak=+++\ " (white space must be escaped)' ],
      \ ['VIP TIP:', 'When editing multiple files (e.g. vim *.c), use :n to move to the next file and :N to move to the previous file. :ar shows the list of files' ],
      \ ['VIP TIP:', ':split - split the current window in two' ],
      \ ['VIP TIP:', 'vim --remote <file> - open a file in an existing vim session' ],
      \ ['VIP TIP:', 'A - enter insert mode at the end of the line (Append); I - insert before the first non-blank of the line' ],
      \ ['VIP TIP:', ':set softtabstop <n> - set the number of spaces to insert when using the tab key (converted to tabs and spaces if expandtab is off).' ],
      \ ['VIP TIP:', ':set expandtab - use spaces rather than the tab character to insert a tab.' ],
      \ ['VIP TIP:', ':set guioptions - set various GUI vim options. e.g. to remove the menubar and toolbar, :set guioptions-=Tm' ],
      \ ['VIP TIP:', '"vim - " - start vim and read from standard input. e.g. with syntax enabled, get a coloured diff from git: git diff | vim -' ],
      \ ['VIP TIP:', 'set mousemodel=popup - enable a popup menu on right click in GUI vim' ],
      \ ['VIP TIP:', 'r\!cat - reads into the buffer from stdin and avoids using :set paste (use ctrl-d to finish)' ],
      \ ['VIP TIP:', ':set title - display info in terminal title. Add let &titleold=getcwd() to .vimrc to set it to something useful on quit' ],
      \ ['VIP TIP:', ':set pastetoggle=key - specify a key sequence that toggles the paste option, e.g. set pastetoggle=<F2>' ],
      \ ['VIP TIP:', ':set paste - allows you to paste from the clipboard correctly, especially when vim is running in a terminal' ],
      \ ['VIP TIP:', 'substitute flag "n" - count how many substitutions would be made, but dont actually make any ' ],
      \ ['VIP TIP:', 'set wildmenu - enhanced filename completion. left and right navigates matches; up and down navigates directories' ],
      \ ['VIP TIP:', 'zt, zz, zb: scroll so that the current position of the cursor is moved to the top, middle or bottom of the screen' ],
      \ ['VIP TIP:', '[range]sort - sort the lines in the [range], or all lines if [range] is not given. e.g. :"<,">sort - sort the current visual selection' ],
      \ ['VIP TIP:', 'noh - stop highlighting the current search (if "hlsearch" is enabled). Highlighting is automatically restored for the next search.' ],
      \ ['VIP TIP:', 'when substituting, \u makes just first character upper (like \l for lower) and \U is upper equivalent for \L' ],
      \ ['VIP TIP:', ':retab <ts> - convert strings of white-space containing <Tab> with new strings using the <ts> value if given or current value of "tabstop"' ],
      \ ['VIP TIP:', 'ctrl-v u <hex code> - enter a unicode character in insert mode' ],
      \ ['VIP TIP:', ':set laststatus=2 - always show the status line (0 = never, 1 = (default) only if there are two or more windows, 2 = always)' ],
      \ ['VIP TIP:', 'b - go back a word (opposite of w)' ],
      \ ['VIP TIP:', '} - move to the next blank line ( { - move to previous blank line)' ],
      \ ['VIP TIP:', 's - delete characters and start insert mode (s stands for Substitute). e.g. 3s - delete three characters and start insert mode.' ],
      \ ['VIP TIP:', '0 - Move to the first character of the line' ],
      \ ['VIP TIP:', ':set columns=X - set the width of the window to X columns. For GUI vim, this is limited to the size of the screen' ],
      \ ['VIP TIP:', ':only - close all windows except the current one (alternatives: ctrl-w ctrl-o or :on)' ],
      \ ['VIP TIP:', 'ctrl-<pagedown> / ctrl-<pageup> - switch to next/previous tab. (alternatives: gt/gT, :tabn/:tabp, etc)' ],
      \ ['VIP TIP:', ':tabe <filename> - open <filename> in a new tab (same as :tabedit and :tabnew)' ],
      \ ['VIP TIP:', 'Ctrl-T and Ctrl-D - indent and un-indent the current line in insert mode' ],
      \ ['VIP TIP:', 'vim +<num> - start vim and place the cursor on line <lnum>. If lnum is not specified, start at the end of the file' ],
      \ ['VIP TIP:', 'gj, gk (or g<Up> g<Down>) - move up or down a display line (makes a difference for wrapped lines)' ],
      \ ['VIP TIP:', '>{motion} and <{motion} - (normal mode) increase/decrease the current indent. e.g. << - decrease the indent of the current line' ],
      \ ['VIP TIP:', '"+ and "* - clipboard and current selection registers under X. e.g. "+p to paste from the clipboard and "+y to copy to the clipboard' ],
      \ ['VIP TIP:', ':r!<cmd> - insert the result of <cmd> into the current buffer at the cursor. e.g. :r!ls *.h' ],
      \ ['VIP TIP:', '& - re-run last :s command (&& to remember flags)' ],
      \ ['VIP TIP:', 'set wildignore - ignore matching files when using tab complete on filenames. e.g. :set wildignore=*.o,*.lo' ],
      \ ['VIP TIP:', 'CTRL-V <tab> - in insert mode, enters a real tab character, disregarding tab and indent options' ],
      \ ['VIP TIP:', 'CTRL-U/CTRL-D - scroll up/down, moving the cursor the same number of lines if possible (unlike <PageUp>/<PageDown>)' ],
      \ ['VIP TIP:', ':set cursorline - Highlight the current line under the cursor' ],
      \ ['VIP TIP:', ':set showcmd - show the number of lines/chacters in a visual selection' ],
      \ ['VIP TIP:', ':x is like ":wq", but write only when changes have been made' ],
      \ ['VIP TIP:', 'ctrl-b / ctrl-f : page up / page down' ],
      \ ['VIP TIP:', 'ctrl-clic / ctrl-t : go to symbol definition (= ctrl-]) (using tags) and back. You can use "make tags" autotooled projects to create tags' ],
      \ ['VIP TIP:', '0/joe/+3 -- find joe move cursor 3 lines down' ],
      \ ['VIP TIP:', '/^joe.*fred.*bill/ -- find joe AND fred AND Bill (Joe at start of line)' ],
      \ ['VIP TIP:', '/^[A-J]/ -- search for lines beginning with one or more A-J' ],
      \ ['VIP TIP:', '/begin\_.*end -- search over possible multiple lines' ],
      \ ['VIP TIP:', '/fred\_s*joe/ -- any whitespace including newline [C]' ],
      \ ['VIP TIP:', '/fred\|joe -- Search for FRED OR JOE' ],
      \ ['VIP TIP:', '/.*fred\&.*joe -- Search for FRED AND JOE in any ORDER!' ],
      \ ['VIP TIP:', '/\<fred\>/ -- search for fred but not alfred or frederick [C]' ],
      \ ['VIP TIP:', '/\<\d\d\d\d\> -- Search for exactly 4 digit numbers' ],
      \ ['VIP TIP:', '/\D\d\d\d\d\D -- Search for exactly 4 digit numbers' ],
      \ ['VIP TIP:', '/\<\d\{4}\> -- same thing' ],
      \ ['VIP TIP:', '/\([^0-9]\|^\)%.*% -- Search for absence of a digit or beginning of line' ],
      \ ['VIP TIP:', '/^\n\{3} -- find 3 empty lines -- finding empty lines' ],
      \ ['VIP TIP:', '/^str.*\nstr -- find 2 successive lines starting with str' ],
      \ ['VIP TIP:', '/\(^str.*\n\)\{2} -- find 2 successive lines starting with str' ],
      \ ['VIP TIP:', '/\(fred\).*\(joe\).*\2.*\1 -- using rexexp memory in a search find fred.*joe.*joe.*fred *C*' ],
      \ ['VIP TIP:', '/^\([^,]*,\)\{8} -- Repeating the Regexp (rather than what the Regexp finds)' ],
      \ ['VIP TIP:', ':vmap // y/<C-R>"<CR> -- search for visually highlighted text -- visual searching' ],
      \ ['VIP TIP:', '/<\zs[^>]*\ze> -- search for tag contents, ignoring chevrons -- \zs and \ze regex delimiters :h /\zs' ],
      \ ['VIP TIP:', '/<\@<=[^>]*>\@= -- search for tag contents, ignoring chevrons -- zero-width :h /\@=' ],
      \ ['VIP TIP:', '/<\@<=\_[^>]*>\@= -- search for tags across possible multiple lines' ],
      \ ['VIP TIP:', '/<!--\_p\{-}--> -- search for multiple line comments -- searching over multiple lines \_ means including newline' ],
      \ ['VIP TIP:', '/fred\_s*joe/ -- any whitespace including newline *C*' ],
      \ ['VIP TIP:', '/bugs\(\_.\)*bunny -- bugs followed by bunny anywhere in file' ],
      \ ['VIP TIP:', ':h \_ -- help' ],
      \ ['VIP TIP:', ':nmap gx yiw/^\(sub\<bar>function\)\s\+<C-R>"<CR> -- search for declaration of subroutine/function under cursor' ],
      \ ['VIP TIP:', ':bufdo /searchstr/ -- use :rewind to recommence search -- multiple file search' ],
      \ ['VIP TIP:', ':bufdo %s/searchstr/&/gic -- say n and then a to stop -- multiple file search better but cheating' ],
      \ ['VIP TIP:', '?http://www.vim.org/ -- (first) search BACKWARDS!!! clever huh!  -- How to search for a URL without backslashing' ],
      \ ['VIP TIP:', '/\c\v([^aeiou]&\a){4} -- search for 4 consecutive consonants -- Specify what you are NOT searching for (vowels)' ],
      \ ['VIP TIP:', '/\%>20l\%<30lgoat -- Search for goat between lines 20 and 30 [N]' ],
      \ ['VIP TIP:', '/^.\{-}home.\{-}\zshome/e -- match only the 2nd occurence in a line of "home" [N]' ],
      \ ['VIP TIP:', ':%s/home.\{-}\zshome/alone -- Substitute only the occurrence of home in any line [N]' ],
      \ ['VIP TIP:', '^\(.*tongue.*\)\@!.*nose.*$ -- find str but not on lines containing tongue' ],
      \ ['VIP TIP:', '\v^((tongue)@!.)*nose((tongue)@!.)*$' ],
      \ ['VIP TIP:', '.*nose.*\&^\%(\%(tongue\)\@!.\)*$ ' ],
      \ ['VIP TIP:', ':v/tongue/s/nose/&/gic' ],
      \ ['VIP TIP:', ':%s/fred/joe/igc -- general substitute command -- *best-substitution*' ],
      \ ['VIP TIP:', ':%s//joe/igc -- Substitute what you last searched for [N]' ],
      \ ['VIP TIP:', ':%s/~/sue/igc -- Substitute your last replacement string [N]' ],
      \ ['VIP TIP:', ':%s/\r//g -- Delete DOS returns ^M' ],
      \ ['VIP TIP:', ':%s/\r/\r/g -- Turn DOS returns ^M into real returns -- Is your Text File jumbled onto one line? use following' ],
      \ ['VIP TIP:', ':%s=  *$== -- delete end of line blanks' ],
      \ ['VIP TIP:', ':%s= \+$== -- Same thing' ],
      \ ['VIP TIP:', ':%s#\s*\r\?$## -- Clean both trailing spaces AND DOS returns' ],
      \ ['VIP TIP:', ':%s#\s*\r*$## -- same thing' ],
      \ ['VIP TIP:', ':%s/^\n\{3}// -- delete blocks of 3 empty lines -- deleting empty lines' ],
      \ ['VIP TIP:', ':%s/^\n\+/\r/ -- compressing empty lines' ],
      \ ['VIP TIP:', ':%s#<[^>]\+>##g -- delete html tags, leave text (non-greedy)' ],
      \ ['VIP TIP:', ':%s#<\_.\{-1,}>##g -- delete html tags possibly multi-line (non-greedy)' ],
      \ ['VIP TIP:', ':%s#.*\(\d\+hours\).*#\1# -- Delete all but memorised string (\1) [N]' ],
      \ ['VIP TIP:', ":'a,'bg/fred/s/dick/joe/igc -- VERY USEFUL -- VIM Power Substitute" ],
      \ ['VIP TIP:', ':%s= [^ ]\+$=&&= -- duplicate end column -- duplicating columns' ],
      \ ['VIP TIP:', ':%s= \f\+$=&&= -- same thing' ],
      \ ['VIP TIP:', ':%s= \S\+$=&& -- usually the same' ],
      \ ['VIP TIP:', ':%s#example#& = &#gic -- duplicate entire matched string [N] -- memory' ],
      \ ['VIP TIP:', ':%s#.*\(tbl_\w\+\).*#\1# -- extract list of all strings tbl_* from text  [NC]' ],
      \ ['VIP TIP:', ':s/\(.*\):\(.*\)/\2 -- \1/   : reverse fields separated by :' ],
      \ ['VIP TIP:', ':%s/^\(.*\)\n\1$/\1/ -- delete duplicate lines' ],
      \ ['VIP TIP:', ':%s/^\(.*\)\(\n\1\)\+$/\1/ -- delete multiple duplicate lines [N]' ],
      \ ['VIP TIP:', ':%s/^.\{-}pdf/new.pdf/ -- delete to 1st occurence of pdf only (non-greedy) -- non-greedy matching \{-}' ],
      \ ['VIP TIP:', ':%s#\<[zy]\?tbl_[a-z_]\+\>#\L&#gc -- lowercase with optional leading characters -- use of optional atom \?' ],
      \ ['VIP TIP:', ':%s/<!--\_.\{-}-->// -- delete possibly multi-line comments -- over possibly many lines' ],
      \ ['VIP TIP:', ':help /\{-} -- help non-greedy' ],
      \ ['VIP TIP:', ':s/fred/<c-r>a/g -- sub "fred" with contents of register "a" -- substitute using a register' ],
      \ ['VIP TIP:', ':s/fred/<c-r>asome_text<c-r>s/g  ' ],
      \ ['VIP TIP:', ':s/fred/\=@a/g -- better alternative as register not displayed (not *) [C]' ],
      \ ['VIP TIP:', ':%s/\f\+\.gif\>/\r&\r/g | v/\.gif$/d | %s/gif/jpg/ -- multiple commands on one line' ],
      \ ['VIP TIP:', ':%s/a/but/gie|:update|:next -- then use @: to repeat' ],
      \ ['VIP TIP:', ':%s/goat\|cow/sheep/gc -- ORing (must break pipe) -- ORing' ],
      \ ['VIP TIP:', ":'a,'bs#\[\|\]##g -- remove [] from lines between markers a and b [N]" ],
      \ ['VIP TIP:', ':%s/\v(.*\n){5}/&\r -- insert a blank line every 5 lines [N]' ],
      \ ['VIP TIP:', ':s/__date__/\=strftime("%c")/ -- insert datestring -- Calling a VIM function' ],
      \ ['VIP TIP:', ':inoremap \zd <C-R>=strftime("%d%b%y")<CR> -- insert date eg 31Jan11 [N]' ],
      \ ['VIP TIP:', ':%s:\(\(\w\+\s\+\)\{2}\)str1:\1str2: -- Working with Columns sub any str1 in col3' ],
      \ ['VIP TIP:', ':%s:\(\w\+\)\(.*\s\+\)\(\w\+\)$:\3\2\1: -- Swapping first & last column (4 columns)' ],
      \ ['VIP TIP:', ':%s#\<from\>\|\<where\>\|\<left join\>\|\<\inner join\>#\r&#g -- format a mysql query ' ],
      \ ['VIP TIP:', ":redir @*|sil exec 'g#<\(input\|select\|textarea\|/\=form\)\>#p'|redir END -- filter all form elements into paste register" ],
      \ ['VIP TIP:', ":nmap ,z :redir @*<Bar>sil exec 'g@<\(input\<Bar>select\<Bar>textarea\<Bar>/\=form\)\>@p'<Bar>redir END<CR>" ],
      \ ['VIP TIP:', ':%s/^\(.\{30\}\)xx/\1yy/ -- substitute string in column 30 [N]' ],
      \ ['VIP TIP:', ':%s/\d\+/\=(submatch(0)-3)/ -- decrement numbers by 3' ],
      \ ['VIP TIP:', ':g/loc\|function/s/\d/\=submatch(0)+6/ -- increment numbers by 6 on certain lines only' ],
      \ ['VIP TIP:', ':%s#txtdev\zs\d#\=submatch(0)+1#g -- better' ],
      \ ['VIP TIP:', ':h /\zs' ],
      \ ['VIP TIP:', ':%s/\(gg\)\@<=\d\+/\=submatch(0)+6/ -- increment only numbers gg\d\d  by 6 (another way)' ],
      \ ['VIP TIP:', ':h zero-width' ],
      \ ['VIP TIP:', ":let i=10 | 'a,'bg/Abc/s/yy/\=i/ |let i=i+1 # convert yy to 10,11,12 etc -- rename a string with an incrementing number" ],
      \ ['VIP TIP:', ":let i=10 | 'a,'bg/Abc/s/xx\zsyy\ze/\=i/ |let i=i+1 # convert xxyy to xx11,xx12,xx13 -- as above but more precise" ],
      \ ['VIP TIP:', ':%s/"\([^.]\+\).*\zsxx/\1/ -- find replacement text, put in memory, then use \zs to simplify substitute' ],
      \ ['VIP TIP:', ':nmap <leader>z :%s#\<<c-r>=expand("<cword>")<cr>\># -- Pull word under cursor into LHS of a substitute' ],
      \ ['VIP TIP:', ':vmap <leader>z :<C-U>%s/\<<c-r>*\>/ -- Pull Visually Highlighted text into LHS of a substitute' ],
      \ ['VIP TIP:', ":'a,'bs/bucket\(s\)*/bowl\1/gic   [N] -- substitute singular or plural" ],
      \ ['VIP TIP:', ':%s,\(all/.*\)\@<=/,_,g -- replace all / with _ AFTER "all/"' ],
      \ ['VIP TIP:', ":s#all/\zs.*#\=substitute(submatch(0), '/', '_', 'g')# -- Same thing" ],
      \ ['VIP TIP:', ":s#all/#&^M#|s#/#_#g|-j!  -- Substitute by splitting line, then re-joining" ],
      \ ['VIP TIP:', ":%s/.*/\='cp '.submatch(0).' all/'.substitute(submatch(0),'/','_','g')/ -- Substitute inside substitute" ],
      \ ['VIP TIP:', ':g/gladiolli/# -- display with line numbers (YOU WANT THIS!) -- *best-global* command ' ],
      \ ['VIP TIP:', ':g/fred.*joe.*dick/ -- display all lines fred,joe & dick' ],
      \ ['VIP TIP:', ':g/\<fred\>/ -- display all lines fred but not freddy' ],
      \ ['VIP TIP:', ':g/^\s*$/d -- delete all blank lines' ],
      \ ['VIP TIP:', ':g!/^dd/d -- delete lines not containing string' ],
      \ ['VIP TIP:', ':v/^dd/d -- delete lines not containing string' ],
      \ ['VIP TIP:', ':g/joe/,/fred/d -- not line based (very powerfull)' ],
      \ ['VIP TIP:', ':g/fred/,/joe/j -- Join Lines [N]' ],
      \ ['VIP TIP:', ':g/{/ ,/}/- s/\n\+/\r/g -- Delete empty lines but only between {...}' ],
      \ ['VIP TIP:', ':v/\S/d -- Delete empty lines (and blank lines ie whitespace)' ],
      \ ['VIP TIP:', ':v/./,/./-j -- compress empty lines' ],
      \ ['VIP TIP:', ':g/^$/,/./-j -- compress empty lines' ],
      \ ['VIP TIP:', ':g/<input\|<form/p -- ORing' ],
      \ ['VIP TIP:', ':g/^/put_ -- double space file (pu = put)' ],
      \ ['VIP TIP:', ':g/^/m0 -- Reverse file (m = move)' ],
      \ ['VIP TIP:', ':g/^/m$ -- No effect! [N]' ],
      \ ['VIP TIP:', ":'a,'bg/^/m'b -- Reverse a section a to b" ],
      \ ['VIP TIP:', ':g/^/t. -- duplicate every line' ],
      \ ['VIP TIP:', ':g/fred/t$ -- copy (transfer) lines matching fred to EOF' ],
      \ ['VIP TIP:', ":g/stage/t'a -- copy (transfer) lines matching stage to marker a (cannot use .) [C]" ],
      \ ['VIP TIP:', ':g/^Chapter/t.|s/./-/g -- Automatically underline selecting headings [N]' ],
      \ ['VIP TIP:', ':g/\(^I[^^I]*\)\{80}/d -- delete all lines containing at least 80 tabs' ],
      \ ['VIP TIP:', ':g/^/ if line('.')%2|s/^/zz / -- perform a substitute on every other line' ],
      \ ['VIP TIP:', ":'a,'bg/somestr/co/otherstr/ -- co(py) or mo(ve)" ],
      \ ['VIP TIP:', ":'a,'bg/str1/s/str1/&&&/|mo/str2/ copy or move or substitute" ],
      \ ['VIP TIP:', ':%norm jdd -- delete every other line' ],
      \ ['VIP TIP:', ':.,$g/^\d/exe "norm! \<c-a>" -- increment numbers' ],
      \ ['VIP TIP:', ":'a,'bg/\d\+/norm! ^A -- increment numbers" ],
      \ ['VIP TIP:', ':g/fred/y A -- append all lines fred to register a' ],
      \ ['VIP TIP:', ':g/fred/y A | :let @*=@a -- put into paste buffer' ],
      \ ['VIP TIP:', ':let @a=''|g/Barratt/y A |:let @*=@a' ],
      \ ['VIP TIP:', ":'a,'bg/^Error/ . w >> errors.txt -- filter lines to a file (file must already exist)" ],
      \ ['VIP TIP:', ':g/^MARK$/r tmp.txt | -d -- replace string with contents of a file, -d deletes the "mark"' ],
      \ ['VIP TIP:', ':g/<pattern>/z#.5 -- display with context -- display prettily' ],
      \ ['VIP TIP:', ':g/<pattern>/z#.5|echo "==========" -- display beautifully' ],
      \ ['VIP TIP:', ':g/|/norm 2f|r* -- replace 2nd | with a star -- Combining g// with normal mode commands' ],
      \ ['VIP TIP:', ':nmap <F3>  :redir @a<CR>:g//<CR>:redir END<CR>:new<CR>:put! a<CR><CR> -- send output of previous global command to a new window' ],
      \ ['VIP TIP:', ":'a,'bg/fred/s/joe/susan/gic --  can use memory to extend matching -- *Best-Global-combined-with-substitute* (*power-editing*)" ],
      \ ['VIP TIP:', ':/fred/,/joe/s/fred/joe/gic --  non-line based (ultra)' ],
      \ ['VIP TIP:', ':/biz/,/any/g/article/s/wheel/bucket/gic:  non-line based [N]' ],
      \ ['VIP TIP:', ':/fred/;/joe/-2,/sid/+3s/sally/alley/gIC -- Find fred before beginning search for joe' ],
      \ ['VIP TIP:', ':g/^/exe ".w ".line(".").".txt" -- create a new file for each line of file eg 1.txt,2.txt,3,txt etc' ],
      \ ['VIP TIP:', 'd/fred/                                :delete until fred -- Operate until string found [N]' ],
      \ ['VIP TIP:', 'y/fred/                                :yank until fred' ],
      \ ['VIP TIP:', 'c/fred/e                               :change until fred end' ],
      \ ['VIP TIP:', '.      last edit (magic dot) -- Summary of editing repeats [N]' ],
      \ ['VIP TIP:', ':&     last substitute' ],
      \ ['VIP TIP:', ':%&    last substitute every line' ],
      \ ['VIP TIP:', ':%&gic last substitute every line confirm' ],
      \ ['VIP TIP:', 'g%     normal mode repeat last substitute' ],
      \ ['VIP TIP:', 'g&     last substitute on all lines' ],
      \ ['VIP TIP:', '@@     last recording' ],
      \ ['VIP TIP:', '@:     last command-mode command' ],
      \ ['VIP TIP:', ':!!    last :! command' ],
      \ ['VIP TIP:', ':~     last substitute' ],
      \ ['VIP TIP:', ':help repeating' ],
      \ ['VIP TIP:', ';      last f, t, F or T -- Summary of repeated searches' ],
      \ ['VIP TIP:', ',      last f, t, F or T in opposite direction' ],
      \ ['VIP TIP:', 'n      last / or ? search' ],
      \ ['VIP TIP:', 'N      last / or ? search in opposite direction' ],
      \ ['VIP TIP:', '* # g* g# -- find word under cursor (<cword>) (forwards/backwards)' ],
      \ ['VIP TIP:', '. -- repeat last modification ' ],
      \ ['VIP TIP:', '@: -- repeat last : command (then @@)' ],
      \ ['VIP TIP:', 'matchit.vim -- % now matches tags <tr><td><script> <?php etc' ],
      \ ['VIP TIP:', '<C-N><C-P> -- word completion in insert mode' ],
      \ ['VIP TIP:', '<C-X><C-L> -- Line complete SUPER USEFUL' ],
      \ ['VIP TIP:', '/<C-R><C-W> -- Pull <cword> onto search/command line' ],
      \ ['VIP TIP:', '/<C-R><C-A> -- Pull <CWORD> onto search/command line' ],
      \ ['VIP TIP:', ':set ignorecase -- you nearly always want this' ],
      \ ['VIP TIP:', ':set smartcase -- overrides ignorecase if uppercase used in search string (cool)' ],
      \ ['VIP TIP:', ':syntax on -- colour syntax in Perl,HTML,PHP etc' ],
      \ ['VIP TIP:', ':set syntax=perl -- force syntax (usually taken from file extension)' ],
      \ ['VIP TIP:', ':h regexp<C-D> -- type control-D and get a list all help topics containing regexp (plus use TAB to Step thru list)' ],
      \ ['VIP TIP:', ':nmap ,s :source $VIM/_vimrc -- MAKE IT EASY TO UPDATE/RELOAD _vimrc' ],
      \ ['VIP TIP:', ':nmap ,v :e $VIM/_vimrc' ],
      \ ['VIP TIP:', ':e $MYVIMRC -- edits your _vimrc whereever it might be  [N]' ],
      \ ['VIP TIP:', ':vsplit other.php       # vertically split current file with other.php [N] -- splitting windows' ],
      \ ['VIP TIP:', ':vmap sb "zdi<b><C-R>z</b><ESC> -- wrap <b></b> around VISUALLY selected Text' ],
      \ ['VIP TIP:', ':vmap st "zdi<?= <C-R>z ?><ESC> -- wrap <?=   ?> around VISUALLY selected Text' ],
      \ ['VIP TIP:', 'vim -p fred.php joe.php -- open files in tabs' ],
      \ ['VIP TIP:', ':tabe fred.php -- open fred.php in a new tab' ],
      \ ['VIP TIP:', ':tab ball -- tab open files' ],
      \ ['VIP TIP:', ':close -- close a tab but leave the buffer *N*' ],
      \ ['VIP TIP:', ':nnoremap gf <C-W>gf -- vim 7 forcing use of tabs from .vimrc' ],
      \ ['VIP TIP:', ':cab      e  tabe' ],
      \ ['VIP TIP:', ':tab sball -- retab all files in buffer (repair) [N]' ],
      \ ['VIP TIP:', ':e . -- file explorer -- Exploring' ],
      \ ['VIP TIP:', ':Exp(lore) -- file explorer note capital Ex' ],
      \ ['VIP TIP:', ':Sex(plore) -- file explorer in split window' ],
      \ ['VIP TIP:', ':browse e -- windows style browser' ],
      \ ['VIP TIP:', ':ls -- list of buffers' ],
      \ ['VIP TIP:', ':cd .. -- move to parent directory' ],
      \ ['VIP TIP:', ':args -- list of files' ],
      \ ['VIP TIP:', ':pwd -- Print Working Directory (current directory) [N]' ],
      \ ['VIP TIP:', ':args *.php -- open list of files (you need this!)' ],
      \ ['VIP TIP:', ':lcd %:p:h -- change to directory of current file' ],
      \ ['VIP TIP:', ':autocmd BufEnter * lcd %:p:h -- change to directory of current file automatically (put in _vimrc)' ],
      \ ['VIP TIP:', 'guu -- lowercase line -- Changing Case' ],
      \ ['VIP TIP:', 'gUU -- uppercase line' ],
      \ ['VIP TIP:', 'Vu -- lowercase line' ],
      \ ['VIP TIP:', 'VU -- uppercase line' ],
      \ ['VIP TIP:', 'g~~ -- flip case line' ],
      \ ['VIP TIP:', 'vEU -- Upper Case Word' ],
      \ ['VIP TIP:', 'vE~ -- Flip Case Word' ],
      \ ['VIP TIP:', 'ggguG -- lowercase entire file' ],
      \ ['VIP TIP:', 'vmap ,c :s/\<\(.\)\(\k*\)\>/\u\1\L\2/g<CR> -- Titlise Visually Selected Text (map for .vimrc)' ],
      \ ['VIP TIP:', 'vnoremap <F6> :s/\%V\<\(\w\)\(\w*\)\>/\u\1\L\2/ge<cr> [N] -- Title Case A Line Or Selection (better)' ],
      \ ['VIP TIP:', 'nmap ,t :s/.*/\L&/<bar>:s/\<./\u&/g<cr>  [N] -- titlise a line' ],
      \ ['VIP TIP:', ':%s/[.!?]\_s\+\a/\U&\E/g -- Uppercase first letter of sentences' ],
      \ ['VIP TIP:', 'gf -- open file name under cursor (SUPER)' ],
      \ ['VIP TIP:', ':nnoremap gF :view <cfile><cr> -- open file under cursor, create if necessary' ],
      \ ['VIP TIP:', 'ga -- display hex,ascii value of char under cursor' ],
      \ ['VIP TIP:', 'ggg?G -- rot13 whole file (quicker for large file)' ],
      \ ['VIP TIP:', ':8 | normal VGg? -- rot13 from line 8' ],
      \ ['VIP TIP:', ':normal 10GVGg? -- rot13 from line 8' ],
      \ ['VIP TIP:', '<C-A>,<C-X> -- increment,decrement number under cursor' ],
      \ ['VIP TIP:', 'win32 users must remap CNTRL-A' ],
      \ ['VIP TIP:', '<C-R>=5*5 -- insert 25 into text (mini-calculator)' ],
      \ ['VIP TIP:', ':h 42 -- also http://www.google.com/search?q=42 -- Make all other tips superfluous' ],
      \ ['VIP TIP:', ':h holy-grail' ],
      \ ['VIP TIP:', ':h!' ],
      \ ['VIP TIP:', 'ggVGg? -- rot13 whole file (toggles) -- disguise text (watch out) [N]' ],
      \ ['VIP TIP:', ':set rl! -- reverse lines right to left (toggles)' ],
      \ ['VIP TIP:', ':g/^/m0 -- reverse lines top to bottom (toggles)' ],
      \ ['VIP TIP:', ":%s/\(\<.\{-}\>\)/\=join(reverse(split(submatch(1), '.\zs')), '')/g -- reverse all text *N*" ],
      \ ['VIP TIP:', 'g; -- cycle thru recent changes (oldest first)' ],
      \ ['VIP TIP:', "g, -- reverse direction " ],
      \ ['VIP TIP:', ':changes' ],
      \ ['VIP TIP:', ':h changelist -- help for above' ],
      \ ['VIP TIP:', ':help jump-motions' ],
      \ ['VIP TIP:', ':history -- list of all your commands' ],
      \ ['VIP TIP:', ':his c -- commandline history' ],
      \ ['VIP TIP:', ':his s -- search history' ],
      \ ['VIP TIP:', 'q/ -- Search history Window (puts you in full edit mode) (exit CTRL-C)' ],
      \ ['VIP TIP:', 'q: -- commandline history Window (puts you in full edit mode) (exit CTRL-C)' ],
      \ ['VIP TIP:', ':<C-F> -- history Window (exit CTRL-C)' ],
      \ ['VIP TIP:', ":map   <f7>   :'a,'bw! c:/aaa/x -- save text to file x" ],
      \ ['VIP TIP:', ':map   <f8>   :r c:/aaa/x -- retrieve text ' ],
      \ ['VIP TIP:', ':map   <f11>  :.w! c:/aaa/xr<CR> -- store current line' ],
      \ ['VIP TIP:', ':map   <f12>  :r c:/aaa/xr<CR> -- retrieve current line' ],
      \ ['VIP TIP:', ':ab php -- list of abbreviations beginning php' ],
      \ ['VIP TIP:', ':map , -- list of maps beginning ,' ],
      \ ['VIP TIP:', 'set wak=no -- :h winaltkeys -- allow use of F10 for mapping (win32)' ],
      \ ['VIP TIP:', '<CR> -- carriage Return for maps -- For use in Maps' ],
      \ ['VIP TIP:', '<ESC> -- Escape' ],
      \ ['VIP TIP:', '<LEADER> -- normally \' ],
      \ ['VIP TIP:', '<BAR> -- | pipe' ],
      \ ['VIP TIP:', '<BACKSPACE> -- backspace' ],
      \ ['VIP TIP:', '<SILENT> -- No hanging shell window' ],
      \ ['VIP TIP:', ':nmap <leader>c :hi Normal guibg=#<c-r>=expand("<cword>")<cr><cr> -- display RGB colour under the cursor eg #445588' ],
      \ ['VIP TIP:', 'map <f2> /price only\\|versus/ :in a map need to backslash the \' ],
      \ ['VIP TIP:', 'imap ,,, <esc>bdwa<<esc>pa><cr></<esc>pa><esc>kA -- type table,,, to get <table></table>       ### Cool ###' ],
      \ ['VIP TIP:', ':for i in range(1, 12) | execute("map <F".i.">") | endfor   [N] -- list current mappings of all your function keys' ],
      \ ['VIP TIP:', ':cab ,f :for i in range(1, 12) \| execute("map <F".i.">") \| endfor -- for your .vimrc' ],
      \ ['VIP TIP:', 'iab phpdb exit("<hr>Debug <C-R>a  "); -- Simple PHP debugging display all variables yanked into register a' ],
      \ ['VIP TIP:', ':let @s=":%!sort -u"' ],
      \ ['VIP TIP:', '"ayy@a -- execute "Vim command" in a text file -- Useful tricks' ],
      \ ['VIP TIP:', 'yy@" -- same thing using unnamed register' ],
      \ ['VIP TIP:', 'u@. -- execute command JUST typed in' ],
      \ ['VIP TIP:', '"ddw -- store what you delete in register d [N]' ],
      \ ['VIP TIP:', '"ccaw -- store what you change in register c [N]' ],
      \ ['VIP TIP:', ':r!ls -R -- reads in output of ls -- Get output from other commands (requires external programs)' ],
      \ ['VIP TIP:', ":put=glob('**') -- same as above                 [N]" ],
      \ ['VIP TIP:', ':r !grep "^ebay" file.txt -- grepping in content   [N]' ],
      \ ['VIP TIP:', ':20,25 !rot13 -- rot13 lines 20 to 25   [N]' ],
      \ ['VIP TIP:', '!!date -- same thing (but replaces/filters current line)' ],
      \ ['VIP TIP:', ':%!sort -u -- use an external program to filter content -- Sorting with external sort' ],
      \ ['VIP TIP:', ":'a,'b!sort -u -- use an external program to filter content" ],
      \ ['VIP TIP:', '!1} sort -u -- sorts paragraph (note normal mode!!)' ],
      \ ['VIP TIP:', ':g/^$/;/^$/-1!sort -- Sort each block (note the crucial ;)' ],
      \ ['VIP TIP:', ':sort /.*\%2v/ -- sort all lines on second column [N] -- Sorting with internal sort' ],
      \ ['VIP TIP:', ':new | r!nl #                  [N] -- number lines  (linux or cygwin only)' ],
      \ ['VIP TIP:', ':bn -- goto next buffer -- Multiple Files Management (Essential)' ],
      \ ['VIP TIP:', ':bp -- goto previous buffer' ],
      \ ['VIP TIP:', ':wn -- save file and move to next (super)' ],
      \ ['VIP TIP:', ':wp -- save file and move to previous' ],
      \ ['VIP TIP:', ':bd -- remove file from buffer list (super)' ],
      \ ['VIP TIP:', ':bun -- Buffer unload (remove window but not from list)' ],
      \ ['VIP TIP:', ':badd file.c -- file from buffer list' ],
      \ ['VIP TIP:', ':b3 -- go to buffer 3 [C]' ],
      \ ['VIP TIP:', ':b main -- go to buffer with main in name eg main.c (ultra)' ],
      \ ['VIP TIP:', ':sav php.html -- Save current file as php.html and "move" to php.html' ],
      \ ['VIP TIP:', ':sav! %<.bak -- Save Current file to alternative extension (old way)' ],
      \ ['VIP TIP:', ':sav! %:r.cfm -- Save Current file to alternative extension' ],
      \ ['VIP TIP:', ':sav %:s/fred/joe/ -- do a substitute on file name' ],
      \ ['VIP TIP:', ':sav %:s/fred/joe/:r.bak2 -- do a substitute on file name & ext.' ],
      \ ['VIP TIP:', ':!mv % %:r.bak -- rename current file (DOS use Rename or DEL)' ],
      \ ['VIP TIP:', ':help filename-modifiers' ],
      \ ['VIP TIP:', ':e! -- return to unmodified file' ],
      \ ['VIP TIP:', ':w c:/aaa/% -- save file elsewhere' ],
      \ ['VIP TIP:', ':e # -- edit alternative file (also cntrl-^)' ],
      \ ['VIP TIP:', ':rew -- return to beginning of edited files list (:args)' ],
      \ ['VIP TIP:', ':brew -- buffer rewind' ],
      \ ['VIP TIP:', ':sp fred.txt -- open fred.txt into a split' ],
      \ ['VIP TIP:', ':sball,:sb -- Split all buffers (super)' ],
      \ ['VIP TIP:', ':scrollbind -- in each split window' ],
      \ ['VIP TIP:', ':map   <F5> :ls<CR>:e # -- Pressing F5 lists all buffer, just type number' ],
      \ ['VIP TIP:', ':set hidden -- Allows to change buffer w/o saving current buffer' ],
      \ ['VIP TIP:', 'map <C-J> <C-W>j<C-W>_ -- Quick jumping between splits' ],
      \ ['VIP TIP:', 'map <C-K> <C-W>k<C-W>_' ],
      \ ['VIP TIP:', '@@ -- Repeat a macro' ],
      \ ['VIP TIP:', '5@@ -- Repeat a macro 5 times' ],
      \ ['VIP TIP:', 'qQ@qq -- Make an existing recording q recursive [N]' ],
      \ ['VIP TIP:', '"qp --display contents of register q (normal mode) -- editing a register/recording' ],
      \ ['VIP TIP:', '<ctrl-R>q --display contents of register q (insert mode)' ],
      \ ['VIP TIP:', '"qdd --put changed contacts back into q -- you can now see recording contents, edit as required' ],
      \ ['VIP TIP:', 'v -- enter visual mode' ],
      \ ['VIP TIP:', 'V -- visual mode whole line' ],
      \ ['VIP TIP:', '<C-V> -- enter VISUAL BLOCKWISE mode (remap on Windows to say C-Q *C*' ],
      \ ['VIP TIP:', 'gv -- reselect last visual area (ultra)' ],
      \ ['VIP TIP:', 'o -- navigate visual area' ],
      \ ['VIP TIP:', '"*y or "+y -- yank visual area into paste buffer  [C]' ],
      \ ['VIP TIP:', 'V% -- visualise what you match' ],
      \ ['VIP TIP:', 'V}J -- Join Visual block (great)' ],
      \ ['VIP TIP:', 'V}gJ -- Join Visual block w/o adding spaces' ],
      \ ['VIP TIP:', '`[v`] -- Highlight last insert' ],
      \ ['VIP TIP:', ':%s/\%Vold/new/g -- Do a substitute on last visual area [N]' ],
      \ ['VIP TIP:', '08l<c-v>10j2ld  (use Control Q on win32) [C] -- Delete 8th and 9th characters of 10 successive lines [C]' ],
      \ ['VIP TIP:', '<C-V> then select "column(s)" with motion commands (win32 <C-Q>)' ],
      \ ['VIP TIP:', 'daW -- delete contiguous non whitespace -- text objects :h text-objects                                     [C]' ],
      \ ['VIP TIP:', 'di<   yi<  ci< -- Delete/Yank/Change HTML tag contents' ],
      \ ['VIP TIP:', 'da<   ya<  ca< -- Delete/Yank/Change whole HTML tag' ],
      \ ['VIP TIP:', 'dat   dit -- Delete HTML tag pair' ],
      \ ['VIP TIP:', 'diB   daB -- Empty a function {}' ],
      \ ['VIP TIP:', 'das -- delete a sentence' ],
      \ ['VIP TIP:', ':imap <TAB> <C-N> -- set tab to complete [N] -- _vimrc essentials' ],
      \ ['VIP TIP:', ':set incsearch -- jumps to search word as you type (annoying but excellent)' ],
      \ ['VIP TIP:', ':set wildignore=*.o,*.obj,*.bak,*.exe -- tab complete now ignores these' ],
      \ ['VIP TIP:', ':set shiftwidth=3 -- for shift/tabbing' ],
      \ ['VIP TIP:', ':set vb t_vb=". -- set silent (no beep)' ],
      \ ['VIP TIP:', ':set browsedir=buffer -- Maki GUI File Open use current directory' ],
      \ ['VIP TIP:', ':nmap ,f :update<CR>:silent !start c:\progra~1\intern~1\iexplore.exe file://%:p<CR> -- launching Win IE' ],
      \ ['VIP TIP:', ':nmap ,i :update<CR>: !start c:\progra~1\intern~1\iexplore.exe <cWORD><CR>' ],
      \ ['VIP TIP:', 'cmap ,r  :Nread ftp://209.51.134.122/public_html/index.html -- FTPing from VIM' ],
      \ ['VIP TIP:', 'cmap ,w  :Nwrite ftp://209.51.134.122/public_html/index.html' ],
      \ ['VIP TIP:', 'gvim ftp://www.somedomain.com/index.html # uses netrw.vim' ],
      \ ['VIP TIP:', '"a5yy10j"A5yy' ],
      \ ['VIP TIP:', '[I -- show lines matching word under cursor <cword> (super)' ],
      \ ['VIP TIP:', ":'a,'b>> -- Conventional Shifting/Indenting" ],
      \ ['VIP TIP:', ':vnoremap < <gv -- visual shifting (builtin-repeat)' ],
      \ ['VIP TIP:', ':vnoremap > >gv' ],
      \ ['VIP TIP:', '>i{ -- Block shifting (magic)' ],
      \ ['VIP TIP:', '>a{ -- Block shifting (magic)' ],
      \ ['VIP TIP:', '>% and <% -- Block shifting (magic)' ],
      \ ['VIP TIP:', '== -- index current line same as line above [N]' ],
      \ ['VIP TIP:', ':redir @* -- redirect commands to paste buffer -- Redirection & Paste register *' ],
      \ ['VIP TIP:', ':redir END -- end redirect' ],
      \ ['VIP TIP:', ':redir >> out.txt -- redirect to a file' ],
      \ ['VIP TIP:', '"*yy -- yank curent line to paste -- Working with Paste buffer' ],
      \ ['VIP TIP:', '"*p -- insert from paste buffer' ],
      \ ['VIP TIP:', ":'a,'by* -- Yank range into paste -- yank to paste buffer (ex mode)" ],
      \ ['VIP TIP:', ':%y* -- Yank whole buffer into paste' ],
      \ ['VIP TIP:', ':.y* -- Yank Current line to paster -- filter non-printable characters from the paste buffer -- useful when pasting from some gui application' ],
      \ ['VIP TIP:', ':set paste -- prevent vim from formatting pasted in text' ],
      \ ['VIP TIP:', 'gq} -- Format a paragraph -- Re-Formatting text' ],
      \ ['VIP TIP:', 'gqap -- Format a paragraph' ],
      \ ['VIP TIP:', 'ggVGgq -- Reformat entire file' ],
      \ ['VIP TIP:', 'Vgq -- current line' ],
      \ ['VIP TIP:', ':s/.\{,69\};\s*\|.\{,69\}\s\+/&\r/g -- break lines at 70 chars, if possible after a ;' ],
      \ ['VIP TIP:', ':argdo %s/foo/bar/e -- operate on all files in :args -- Operate command over multiple files' ],
      \ ['VIP TIP:', ':bufdo %s/foo/bar/e -- operate on all files in :args -- Operate command over multiple files' ],
      \ ['VIP TIP:', ':windo %s/foo/bar/e -- operate on all files in :args -- Operate command over multiple files' ],
      \ ['VIP TIP:', ":argdo exe '%!sort'|w! -- include an external command" ],
      \ ['VIP TIP:', ':bufdo exe "normal @q" | w -- perform a recording on open files' ],
      \ ['VIP TIP:', ':silent bufdo !zip proj.zip %:p -- zip all current files' ],
      \ ['VIP TIP:', 'gvim -h -- help -- Command line tricks' ],
      \ ['VIP TIP:', 'ls | gvim - -- edit a stream!!' ],
      \ ['VIP TIP:', 'cat xx | gvim - -c "v/^\d\d\|^[3-9]/d -- -- filter a stream' ],
      \ ['VIP TIP:', 'gvim -o file1 file2 -- open into a horizontal split (file1 on top, file2 on bottom) [C]' ],
      \ ['VIP TIP:', 'gvim -O file1 file2 -- open into a vertical split (side by side,for comparing code) [N]' ],
      \ ['VIP TIP:', 'gvim.exe -c "/main" joe.c -- Open joe.c & jump to "main" -- execute one command after opening file' ],
      \ ['VIP TIP:', 'vim -c "%s/ABC/DEF/ge | update" file1.c -- execute multiple command on a single file' ],
      \ ['VIP TIP:', 'vim -c "argdo %s/ABC/DEF/ge | update" *.c -- execute multiple command on a group of files' ],
      \ ['VIP TIP:', 'vim -c "argdo /begin/+1,/end/-1g/^/d | update" *.c -- remove blocks of text from a series of files' ],
      \ ['VIP TIP:', 'vim -s "convert.vim" file.c -- Automate editing of a file (Ex commands in convert.vim)' ],
      \ ['VIP TIP:', 'gvim -u NONE -U NONE -N -- load VIM without .vimrc and plugins (clean VIM) e.g. for HUGE files' ],
      \ ['VIP TIP:', "gvim -c 's/^/\=@*/|hardcopy!|q!' -- print paste contents to default printer" ],
      \ ['VIP TIP:', ':!grep somestring *.php -- creates a list of all matching files [C] -- gvims use of external grep (win32 or *nix)' ],
      \ ['VIP TIP:', ':h grep -- use :cn(ext) :cp(rev) to navigate list' ],
      \ ['VIP TIP:', ':vimgrep /keywords/ *.php -- Using vimgrep with copen                              [N]' ],
      \ ['VIP TIP:', ':copen' ],
      \ ['VIP TIP:', 'gvim -d file1 file2 -- vimdiff (compare differences) -- GVIM Difference Function (Brilliant)' ],
      \ ['VIP TIP:', 'dp -- "put" difference under cursor to other file' ],
      \ ['VIP TIP:', 'do -- "get" difference under cursor from other file' ],
      \ ['VIP TIP:', ':1,2yank a | 7,8yank b -- complex diff parts of same file [N]' ],
      \ ['VIP TIP:', ':tabedit | put a | vnew | put b' ],
      \ ['VIP TIP:', ':windo diffthis ' ],
      \ ['VIP TIP:', 'In regular expressions you must backslash + (match 1 or more) -- Vim traps' ],
      \ ['VIP TIP:', 'In regular expressions you must backslash | (or)' ],
      \ ['VIP TIP:', 'In regular expressions you must backslash ( (group)' ],
      \ ['VIP TIP:', 'In regular expressions you must backslash { (count)' ],
      \ ['VIP TIP:', '/fred\+/ -- matches fred/freddy but not free' ],
      \ ['VIP TIP:', '/\(fred\)\{2,3}/ -- note what you have to break' ],
      \ ['VIP TIP:', '/codes\(\n\|\s\)*where -- normal regexp -- \v or very magic (usually) reduces backslashing' ],
      \ ['VIP TIP:', '/\vcodes(\n|\s)*where -- very magic' ],
      \ ['VIP TIP:', '<C-R><C-W> -- pull word under the cursor into a command line or search -- pulling objects onto command/search line (SUPER)' ],
      \ ['VIP TIP:', '<C-R><C-A> -- pull WORD under the cursor into a command line or search' ],
      \ ['VIP TIP:', '<C-R>- -- pull small register (also insert mode)' ],
      \ ['VIP TIP:', '<C-R>[0-9a-z] -- pull named registers (also insert mode)' ],
      \ ['VIP TIP:', '<C-R>% -- pull file name (also #) (also insert mode)' ],
      \ ['VIP TIP:', '<C-R>=somevar -- pull contents of a variable (eg :let sray="ray[0-9]")' ],
      \ ['VIP TIP:', ':reg -- display contents of all registers -- List your Registers' ],
      \ ['VIP TIP:', ':reg a -- display content of register a' ],
      \ ['VIP TIP:', ':reg 12a -- display content of registers 1,2 & a [N]' ],
      \ ['VIP TIP:', '"5p -- retrieve 5th "ring" ' ],
      \ ['VIP TIP:', '"1p.... -- retrieve numeric registers one by one' ],
      \ ['VIP TIP:', 'qqq -- empty register "q"' ],
      \ ['VIP TIP:', 'qaq -- empty register "a"' ],
      \ ['VIP TIP:', ':reg .-/%:*" -- the seven special registers [N]' ],
      \ ['VIP TIP:', ':reg 0 -- what you last yanked, not affected by a delete [N]' ],
      \ ['VIP TIP:', '"_dd -- Delete to blackhole register "_ , dont affect any register [N]' ],
      \ ['VIP TIP:', ':let @a=@_ -- clear register a -- manipulating registers' ],
      \ ['VIP TIP:', ':let @a="" -- clear register a' ],
      \ ['VIP TIP:', ':let @a=@" -- Save unnamed register [N]' ],
      \ ['VIP TIP:', ':let @*=@a -- copy register a to paste buffer' ],
      \ ['VIP TIP:', ':let @*=@: -- copy last command to paste buffer' ],
      \ ['VIP TIP:', ':let @*=@/ -- copy last search to paste buffer' ],
      \ ['VIP TIP:', ':let @*=@% -- copy current filename to paste buffer' ],
      \ ['VIP TIP:', ':h quickref -- VIM Quick Reference Sheet (ultra) -- help for help (USE TAB)' ],
      \ ['VIP TIP:', ':h tips -- Vims own Tips Help' ],
      \ ['VIP TIP:', ':h visual<C-D><tab> -- obtain  list of all visual help topics' ],
      \ ['VIP TIP:', '-- Then use tab to step thru them' ],
      \ ['VIP TIP:', ':h ctrl<C-D> -- list help of all control keys' ],
      \ ['VIP TIP:', ':helpg uganda -- grep HELP Files use :cn, :cp to find next' ],
      \ ['VIP TIP:', ':helpgrep edit.*director: grep help using regexp' ],
      \ ['VIP TIP:', ':h :r -- help for :ex command' ],
      \ ['VIP TIP:', ':h CTRL-R -- normal mode' ],
      \ ['VIP TIP:', ':h /\r -- whats \r in a regexp (matches a <CR>)' ],
      \ ['VIP TIP:', ':h \\zs -- double up backslash to find \zs in help' ],
      \ ['VIP TIP:', ':h i_CTRL-R -- help for say <C-R> in insert mode' ],
      \ ['VIP TIP:', ':h c_CTRL-R -- help for say <C-R> in command mode' ],
      \ ['VIP TIP:', ':h v_CTRL-V -- visual mode' ],
      \ ['VIP TIP:', ':h tutor -- VIM Tutor' ],
      \ ['VIP TIP:', '<C-[>, <C-T> -- Move back & Forth in HELP History' ],
      \ ['VIP TIP:', 'gvim -h -- VIM Command Line Help' ],
      \ ['VIP TIP:', ':cabbrev h tab h -- open help in a tab [N]' ],
      \ ['VIP TIP:', ':scriptnames -- list all plugins, _vimrcs loaded (super) -- where was an option set' ],
      \ ['VIP TIP:', ':verbose set history? -- reveals value of history and where set' ],
      \ ['VIP TIP:', ':function -- list functions' ],
      \ ['VIP TIP:', ':func SearchCompl -- List particular function' ],
      \ ['VIP TIP:', ':helptags /vim/vim64/doc -- rebuild all *.txt help files in /doc -- making your own VIM help' ],
      \ ['VIP TIP:', ':help add-local-help' ],
      \ ['VIP TIP:', ':sav! $VIMRUNTIME/doc/vimtips.txt|:1,/^__BEGIN__/d|:/^__END__/,$d|:w!|:helptags $VIMRUNTIME/doc -- save this page as a VIM Help File [N]' ],
      \ ['VIP TIP:', 'map   <f9>   :w<CR>:!c:/php/php.exe %<CR> -- running file thru an external program (eg php)' ],
      \ ['VIP TIP:', 'map   <f2>   :w<CR>:!perl -c %<CR>' ],
      \ ['VIP TIP:', ':new | r!perl # -- opens new buffer,read other buffer -- capturing output of current script in a separate buffer' ],
      \ ['VIP TIP:', ':new! x.out | r!perl # -- same with named file' ],
      \ ['VIP TIP:', ':new+read!ls' ],
      \ ['VIP TIP:', ':new +put q|%!sort -- create a new buffer, paste a register "q" into it, then sort new buffer' ],
      \ ['VIP TIP:', ':%s/$/\<C-V><C-M>&/g --  thats what you type -- Inserting DOS Carriage Returns' ],
      \ ['VIP TIP:', ':%s/$/\<C-Q><C-M>&/g --  for Win32' ],
      \ ['VIP TIP:', ':%s/$/\^M&/g --  what youll see where ^M is ONE character' ],
      \ ['VIP TIP:', 'autocmd BufRead * silent! %s/[\r \t]\+$// -- automatically delete trailing Dos-returns,whitespace' ],
      \ ['VIP TIP:', 'autocmd BufEnter *.php :%s/[ \t\r]\+$//e' ],
      \ ['VIP TIP:', 'autocmd VimEnter c:/intranet/note011.txt normal! ggVGg?  -- perform an action on a particular file or file type' ],
      \ ['VIP TIP:', "autocmd FileType *.pl exec('set fileformats=unix')" ],
      \ ['VIP TIP:', 'i<c-r>: -- Retrieving last command line command for copy & pasting into text' ],
      \ ['VIP TIP:', 'i<c-r>/ -- Retrieving last Search Command for copy & pasting into text' ],
      \ ['VIP TIP:', '<C-X><C-F>                        :insert name of a file in current directory -- more completions' ],
      \ ['VIP TIP:', ":'<,'>s/Emacs/Vim/g -- REMEMBER you dont type the '<.'>" ],
      \ ['VIP TIP:', 'gv -- Re-select the previous visual area (ULTRA)' ],
      \ ['VIP TIP:', ':g/^/exec "s/^/".strpart(line(".")."    ", 0, 4) -- inserting line number into file' ],
      \ ['VIP TIP:', ':%s/^/\=strpart(line(".")."     ", 0, 5)' ],
      \ ['VIP TIP:', ":%s/^/\=line('.'). ' '" ],
      \ ['VIP TIP:', ':set number -- show line numbers -- *numbering lines VIM way*' ],
      \ ['VIP TIP:', ':map <F12> :set number!<CR> -- Show linenumbers flip-flop' ],
      \ ['VIP TIP:', ':%s/^/\=strpart(line('.')."        ",0,&ts)' ],
      \ ['VIP TIP:', ":'a,'b!perl -pne 'BEGIN{$a=223} substr($_,2,0)=$a++' -- numbering lines (need Perl on PC) starting from arbitrary number -- Produce a list of numbers -- Type in number on line say 223 in an empty file" ],
      \ ['VIP TIP:', 'qqmnYP`n^Aq -- in recording q repeat with @q' ],
      \ ['VIP TIP:', ':.,$g/^\d/exe "normal! \<c-a>" -- increment existing numbers to end of file (type <c-a> as 5 characters)' ],
      \ ['VIP TIP:', 'http://vim.sourceforge.net/tip_view.php?tip_id=150 -- advanced incrementing' ],
      \ ['VIP TIP:', 'let g:I=0' ],
      \ ['VIP TIP:', ':let I=223 -- eg create list starting from 223 incrementing by 5 between markers a,b' ],
      \ ['VIP TIP:', ":'a,'bs/^/\=INC(5)/" ],
      \ ['VIP TIP:', "cab viminc :let I=223 \| 'a,'bs/$/\=INC(5)/ -- create a map for INC" ],
      \ ['VIP TIP:', 'o23<ESC>qqYp<C-A>q40@q -- *generate a list of numbers*  23-64' ],
      \ ['VIP TIP:', '<C-U> -- delete all entered -- editing/moving within current insert (Really useful)' ],
      \ ['VIP TIP:', '<C-W> -- delete last word' ],
      \ ['VIP TIP:', '<HOME><END> -- beginning/end of line' ],
      \ ['VIP TIP:', '<C-LEFTARROW><C-RIGHTARROW> -- jump one word backwards/forwards' ],
      \ ['VIP TIP:', '<C-X><C-E>,<C-X><C-Y> -- scroll while staying put in insert' ],
      \ ['VIP TIP:', '#encryption (use with care: dont FORGET your KEY)' ],
      \ ['VIP TIP:', ':X -- you will be prompted for a key' ],
      \ ['VIP TIP:', ':h :X' ],
      \ ['VIP TIP:', '// vim:noai:ts=2:sw=4:readonly: -- modeline (make a file readonly etc) must be in first/last 5 lines' ],
      \ ['VIP TIP:', ':h modeline -- vim:ft=html: -- says use HTML Syntax highlighting' ],
      \ ['VIP TIP:', 'amenu  Modeline.Insert\ a\ VIM\ modeline <Esc><Esc>ggOvim:ff=unix ts=4 ss=4<CR>vim60:fdm=marker<esc>gg -- Creating your own GUI Toolbar entry' ],
      \ ['VIP TIP:', 'map ,p :call SaveWord()' ],
      \ ['VIP TIP:', 'endfunction' ],
      \ ['VIP TIP:', ':g/^/ call Del()' ],
      \ ['VIP TIP:', ':digraphs -- display table -- Digraphs (non alpha-numerics)' ],
      \ ['VIP TIP:', ':h dig -- help' ],
      \ ['VIP TIP:', "i<C-K>e' -- enters Ã©" ],
      \ ['VIP TIP:', 'i<C-V>233 -- enters Ã© (Unix)' ],
      \ ['VIP TIP:', 'i<C-Q>233 -- enters Ã© (Win32)' ],
      \ ['VIP TIP:', 'ga -- View hex value of any character' ],
      \ ['VIP TIP:', '#Deleting non-ascii characters (some invisible)' ],
      \ ['VIP TIP:', ':%s/[\x00-\x1f\x80-\xff]/ /g -- type this as you see it' ],
      \ ['VIP TIP:', ':%s/[<C-V>128-<C-V>255]//gi -- where you have to type the Control-V' ],
      \ ['VIP TIP:', ':%s/[-Ã¿]//gi -- Should see a black square & a dotted y' ],
      \ ['VIP TIP:', ':%s/[<C-V>128-<C-V>255<C-V>01-<C-V>31]//gi -- All pesky non-asciis' ],
      \ ['VIP TIP:', ':exec "norm /[\x00-\x1f\x80-\xff]/" -- same thing' ],
      \ ['VIP TIP:', '#Pull a non-ascii character onto search bar' ],
      \ ['VIP TIP:', 'yl/<C-R>"                         :' ],
      \ ['VIP TIP:', '/[^a-zA-Z0-9_[:space:][:punct:]] -- search for all non-ascii' ],
      \ ['VIP TIP:', ':e main_<tab> -- tab completes -- All file completions grouped (for example main_c.c)' ],
      \ ['VIP TIP:', 'gf -- open file under cursor  (normal)' ],
      \ ['VIP TIP:', 'main_<C-X><C-F> -- include NAME of file in text (insert mode)' ],
      \ ['VIP TIP:', ':%s/\<\(on\|off\)\>/\=strpart("offon", 3 * ("off" == submatch(0)), 3)/g' ],
      \ ['VIP TIP:', ':vnoremap <C-X> <Esc>`.``gvP``P -- swap two words' ],
      \ ['VIP TIP:', 'nmap <silent> gw    "_yiw:s/\(\%#\w\+\)\(\_W\+\)\(\w\+\)/\3\2\1/<cr><c-o><c-l> [N] -- Swap word with next word' ],
      \ ['VIP TIP:', ':runtime! syntax/2html.vim -- convert txt to html -- Convert Text File to HTML' ],
      \ ['VIP TIP:', ':h 2html' ],
      \ ['VIP TIP:', ':grep some_keyword *.c -- get list of all c-files containing keyword -- VIM has internal grep' ],
      \ ['VIP TIP:', ':cn -- go to next occurrence' ],
      \ ['VIP TIP:', ':set syntax=perl -- Force Syntax coloring for a file that has no extension .pl' ],
      \ ['VIP TIP:', ':set syntax off -- Remove syntax coloring (useful for all sorts of reasons)' ],
      \ ['VIP TIP:', ':colorscheme blue -- change coloring scheme (any file in ~vim/vim??/colors)' ],
      \ ['VIP TIP:', ':colorscheme morning -- good fallback colorscheme *N*' ],
      \ ['VIP TIP:', '# vim:ft=html: -- Force HTML Syntax highlighting by using a modeline' ],
      \ ['VIP TIP:', 'au BufRead,BufNewFile */Content.IE?/* setfiletype html -- Force syntax automatically (for a file with non-standard extension)' ],
      \ ['VIP TIP:', ':set noma (non modifiable) -- Prevents modifications' ],
      \ ['VIP TIP:', ':set ro (Read Only) -- Protect a file from unintentional writes' ],
      \ ['VIP TIP:', 'gvim file1.c file2.c lib/lib.h lib/lib2.h -- load files for "session" -- Sessions (Open a set of files)' ],
      \ ['VIP TIP:', ':mksession -- Make a Session file (default Session.vim)' ],
      \ ['VIP TIP:', ':mksession MySession.vim -- Make a Session file named file [C]' ],
      \ ['VIP TIP:', ':q' ],
      \ ['VIP TIP:', 'gvim -S -- Reload all files (loads Session.vim) [C]' ],
      \ ['VIP TIP:', 'gvim -S MySession.vim -- Reload all files from named session [C]' ],
      \ ['VIP TIP:', '#tags (jumping to subroutines/functions)' ],
      \ ['VIP TIP:', 'taglist.vim -- popular plugin' ],
      \ ['VIP TIP:', ':Tlist -- display Tags (list of functions)' ],
      \ ['VIP TIP:', '<C-]> -- jump to function under cursor' ],
      \ ['VIP TIP:', ':let width = 20 -- columnise a csv file for display only as may crop wide columns' ],
      \ ['VIP TIP:', ":let fill=' ' | while strlen(fill) < width | let fill=fill.fill | endwhile" ],
      \ ['VIP TIP:', ':%s/\([^;]*\);\=/\=strpart(submatch(1).fill, 0, width)/ge' ],
      \ ['VIP TIP:', ':%s/\s\+$//ge' ],
      \ ['VIP TIP:', 'command! -nargs=1 Csv :call CSVH(<args>)' ],
      \ ['VIP TIP:', ':Csv 5 -- highlight fifth column -- call with' ],
      \ ['VIP TIP:', 'zf1G -- fold everything before this line [N]' ],
      \ ['VIP TIP:', 'zf} -- fold paragraph using motion -- folding : hide sections to allow easier comparisons' ],
      \ ['VIP TIP:', 'v}zf -- fold paragraph using visual' ],
      \ ['VIP TIP:', "zf'a -- fold to mark" ],
      \ ['VIP TIP:', 'zo -- open fold' ],
      \ ['VIP TIP:', 'zc -- re-close fold' ],
      \ ['VIP TIP:', ':help folding -- also visualise a section of code then type zf [N]' ],
      \ ['VIP TIP:', 'zfG -- fold everything after this line [N]' ],
      \ ['VIP TIP:', ':set list -- displaying "non-asciis"' ],
      \ ['VIP TIP:', ':h listchars' ],
      \ ['VIP TIP:', ':norm qqy$jq -- How to paste "normal vim commands" w/o entering insert mode' ],
      \ ['VIP TIP:', ':h filename-modifiers -- help -- manipulating file names' ],
      \ ['VIP TIP:', ':w % -- write to current file name' ],
      \ ['VIP TIP:', ':w %:r.cfm -- change file extention to .cfm' ],
      \ ['VIP TIP:', ':!echo %:p -- full path & file name' ],
      \ ['VIP TIP:', ':!echo %:p:h -- full path only' ],
      \ ['VIP TIP:', ':!echo %:t -- filename only' ],
      \ ['VIP TIP:', ':reg % -- display filename' ],
      \ ['VIP TIP:', '<C-R>% -- insert filename (insert mode)' ],
      \ ['VIP TIP:', '"%p -- insert filename (normal mode)' ],
      \ ['VIP TIP:', '/<C-R>% -- Search for file name in text' ],
      \ ['VIP TIP:', '"_d -- what youve ALWAYS wanted -- delete without destroying default buffer contents' ],
      \ ['VIP TIP:', '"_dw -- eg delete word (use blackhole)' ],
      \ ['VIP TIP:', 'nnoremap <F2> :let @*=expand("%:p")<cr> :unix -- pull full path name into paste buffer for attachment to email etc' ],
      \ ['VIP TIP:', 'nnoremap <F2> :let @*=substitute(expand("%:p"), "/", "\\", "g")<cr> :win32' ],
      \ ['VIP TIP:', '$ vim -- Simple Shell script to rename files w/o leaving vim' ],
      \ ['VIP TIP:', ':r! ls *.c' ],
      \ ['VIP TIP:', ':%s/\(.*\).c/mv & \1.bla' ],
      \ ['VIP TIP:', ':w !sh' ],
      \ ['VIP TIP:', ':q!' ],
      \ ['VIP TIP:', 'g<C-G>                                 # counts words -- count words/lines in a text file' ],
      \ ['VIP TIP:', ':syn match DoubleSpace --  -- " example of setting your own highlighting' ],
      \ ['VIP TIP:', ':hi def DoubleSpace guibg=#e0e0e0' ],
      \ ['VIP TIP:', 'imap ]  @@@<ESC>hhkyWjl?@@@<CR>P/@@@<CR>3s -- reproduce previous line word by word' ],
      \ ['VIP TIP:', 'nmap ] i@@@<ESC>hhkyWjl?@@@<CR>P/@@@<CR>3s' ],
      \ ['VIP TIP:', ':autocmd bufenter *.tex map <F1> :!latex %<CR> -- Programming keys depending on file type' ],
      \ ['VIP TIP:', ':autocmd bufenter *.tex map <F2> :!xdvi -hush %<.dvi&<CR>' ],
      \ ['VIP TIP:', ':autocmd bufenter *.php :set iskeyword+=\$ -- allow yanking of php variables with their dollar [N]' ],
      \ ['VIP TIP:', ':autocmd BufReadPre *.doc set ro -- reading Ms-Word documents, requires antiword (not docx)' ],
      \ ['VIP TIP:', ':autocmd BufReadPre *.doc set hlsearch!' ],
      \ ['VIP TIP:', ':autocmd BufReadPost *.doc %!antiword "%"' ],
      \ ['VIP TIP:', '"act< --  Change Till < [N] -- store text that is to be changed or deleted in register a' ],
      \ ['VIP TIP:', 'vim -c ":%s%s*%Cyrnfr)fcbafbe[Oenz(Zbbyranne%|:%s)[[()])-)Ig|norm Vg?" -- *Just Another Vim Hacker JAVH*' ],
      \ ['VIP TIP:', 'zz to center the cursor vertically on your screen. Useful when you 250Gzz, for instance.' ],
      \ ['VIP TIP:', "CTRL-w | and CTRL-W _ maximize your current split vertically and horizontally, respectively. CTRL-W = equalizes 'em." ],
      \ ['VIP TIP:', ":g/_pattern_/s/^/#/g will comment out lines containing _pattern_ (if '#' is your comment character/sequence)" ],
      \ ['VIP TIP:', 'vim -c [command] will launch vim and run a -- command at launch, e.g. "vim -c NERDTree."' ],
      \ ['VIP TIP:', 'CTRL-w s CTRL-w T will open current buffer in new tab' ],
      \ ['VIP TIP:', 'CTRL-w K will switch vertical split into horizontal, CTRL-w H will switch a horizontal into a vertical.' ],
      \ ['VIP TIP:', ':w !sudo tee % will use sudo to write the open file (have you ever forgotten to `sudo vim /path/to/file`?)' ],
      \ ['VIP TIP:', 'K runs a prgrm to lookup the keyword under the cursor. If writing C, it runs man. In Ruby, it (should) run ri, Python (perhaps) pydoc.' ],
      \ ['VIP TIP:', 'Edit and encrypt a file: vim -x filename' ],
      \ ['VIP TIP:', ':%s//joe/igc substitute your last search with joe.' ],
      \ ['VIP TIP:', '/fred\_s*joe/ will search for fred AND joe with whitespace (including newline) in between.' ],
      \ ['VIP TIP:', 'From a command-line, vim scp://username@host//path/to/file to edit a remote file locally.' ],
      \ ['VIP TIP:', '/fred|joe/ will search for either fred OR joe.' ],
      \ ['VIP TIP:', '/.*fred&.*joe/ will search for fred AND joe, in any order.' ],
      \ ['VIP TIP:', '/<fred>/ will search for fred, but not alfred or frederick.' ],
      \ ['VIP TIP:', '/joe/e will search for joe and place the cursor at the end of the match.' ],
      \ ['VIP TIP:', '/joe/e+1 will search for joe and place the cursor at the end of the match, plus on character.' ],
      \ ['VIP TIP:', '/joe/s-2 will search for joe and place the cursor at the start of the match, minus two characters.' ],
      \ ['VIP TIP:', '/joe/+3 will search for joe and place the cursor three lines below the match.' ],
      \ ['VIP TIP:', '/joe.*fred.*bill/ will search for joe AND fred AND bill, in that order.' ],
      \ ['VIP TIP:', '/begin\_.*end will search for begin AND end over multiple lines.' ],
      \ ['VIP TIP:', ":s/\(.*\):\(.*\)/\2 -- \1/ will reverse fields separated by ':'" ],
      \ ['VIP TIP:', 'Edit a command output in Vim as a file:' ],
      \ ['VIP TIP:', '$ command | vim -' ],
      \ ['VIP TIP:', 'ggVG= will auto-format the entire document' ],
      \ ['VIP TIP:', "'0 opens the last modified file ('1 '2 '3 works too)" ],
      \ ['VIP TIP:', '[I (big i) shows lines containing the word under the cursor' ],
      \ ['VIP TIP:', 'In insert mode do Ctrl+r=53+17<Enter>. This way you can do some calcs with vim.' ],
      \ ['VIP TIP:', '"_d will delete the selection without adding it to the yanked stack (sending it to the black hole register).' ],
      \ ['VIP TIP:', "Basic commands 'f' and 't' (like first and 'til) are very powerful. See :help t or :help f." ],
      \ ['VIP TIP:', ':40,50m30 will move lines 40 through 50 to line 30. Most visual mode commands can be used with line numbers.' ],
      \ ['VIP TIP:', 'To search for a URL without backslashing, search backwards! Example: ?http://somestuff.com' ],
      \ ['VIP TIP:', ":%s/~/sue/igc substitute your last replacement string with 'sue'." ],
      \ ['VIP TIP:', 'g; will cycle through your recent changes (or g, to go in reverse).' ],
      \ ['VIP TIP:', ':%s/^\n\{3}// will delete a block of 3 empty lines.' ],
      \ ['VIP TIP:', ':%s/^\n\+/\r/ will compress multiple empty lines into one.' ],
      \ ['VIP TIP:', ':%s#<[^>]\+>##g will remove HTML tags, leaving the text. (non-greedy)' ],
      \ ['VIP TIP:', ":%s#.*(hours).*#1# will delete everything on a line except for the string 'hours'." ],
      \ ['VIP TIP:', '"2p will put the second to last thing yanked, "3p will put the third to last, etc.' ],
      \ ['VIP TIP:', ':wa will save all buffers. :xa will save all buffers and exit Vim.' ],
      \ ['VIP TIP:', 'After performing an undo, you can navigate through the changes using g- and g+. Also, try :undolist to list the changes.' ],
      \ ['VIP TIP:', "You probably know that 'u' is undo. Do you know that Ctrl-R is redo?" ],
      \ ['VIP TIP:', 'ci{ Ã¢ change text inside {} block. Also see di{, yi{, ci( etc.' ],
      \ ['VIP TIP:', ':set autochdir instead of :lcd %:p:h in your vimrc to change directories upon opening a file.' ],
      \ ['VIP TIP:', ':read [filename] will insert the contents of [filename] at the current cursor position ' ],
      \ ['VIP TIP:', 'to use gvim to edit your git messages set gits core editor as follows:' ],
      \ ['VIP TIP:', ':set foldmethod=syntax to make editing long files of code much easier.  zo to open a fold.  zc to close it.  See more' ],
      \ ['VIP TIP:', ':%s/\ r//g to remove all those nasty ^M from a file, or :%s/\ r$//g for only at the end of a line.' ],
      \ ['VIP TIP:', 'Ctrl-a, Ctrl-x will increment and decrement, respectively, the number under the cursor.' ],
      \ ['VIP TIP:', "You can use the environment variable 'SHLVL' to check if you are within a vim subshell or not." ],
      \ ]
